# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from schemata.protobuf.wittgenstein import factdb_pb2 as schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2


class FactDBStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StateFact = channel.unary_unary(
                '/dev.abstractmachines.wittgenstein.FactDB/StateFact',
                request_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactRequest.SerializeToString,
                response_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactReply.FromString,
                )
        self.StateFacts = channel.stream_stream(
                '/dev.abstractmachines.wittgenstein.FactDB/StateFacts',
                request_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactRequest.SerializeToString,
                response_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactReply.FromString,
                )
        self.LookupEntity = channel.unary_unary(
                '/dev.abstractmachines.wittgenstein.FactDB/LookupEntity',
                request_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.LookupEntityRequest.SerializeToString,
                response_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.LookupEntityReply.FromString,
                )
        self.Project = channel.unary_stream(
                '/dev.abstractmachines.wittgenstein.FactDB/Project',
                request_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.ProjectionDescription.SerializeToString,
                response_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.ProjectedEntity.FromString,
                )


class FactDBServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StateFact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StateFacts(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Project(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FactDBServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StateFact': grpc.unary_unary_rpc_method_handler(
                    servicer.StateFact,
                    request_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactRequest.FromString,
                    response_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactReply.SerializeToString,
            ),
            'StateFacts': grpc.stream_stream_rpc_method_handler(
                    servicer.StateFacts,
                    request_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactRequest.FromString,
                    response_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactReply.SerializeToString,
            ),
            'LookupEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupEntity,
                    request_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.LookupEntityRequest.FromString,
                    response_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.LookupEntityReply.SerializeToString,
            ),
            'Project': grpc.unary_stream_rpc_method_handler(
                    servicer.Project,
                    request_deserializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.ProjectionDescription.FromString,
                    response_serializer=schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.ProjectedEntity.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dev.abstractmachines.wittgenstein.FactDB', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FactDB(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StateFact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dev.abstractmachines.wittgenstein.FactDB/StateFact',
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactRequest.SerializeToString,
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StateFacts(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/dev.abstractmachines.wittgenstein.FactDB/StateFacts',
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactRequest.SerializeToString,
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.StateFactReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dev.abstractmachines.wittgenstein.FactDB/LookupEntity',
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.LookupEntityRequest.SerializeToString,
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.LookupEntityReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Project(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dev.abstractmachines.wittgenstein.FactDB/Project',
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.ProjectionDescription.SerializeToString,
            schemata_dot_protobuf_dot_wittgenstein_dot_factdb__pb2.ProjectedEntity.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
